# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  vmImage: 'ubuntu-latest'
  dockerfilePath: '$(Build.SourcesDirectory)/docker/Dockerfile'
  dockerComposePath: '$(Build.SourcesDirectory)/docker/docker-compose.yml'

jobs:
  - job: BuildApi
    displayName: "Build Payment Gateway api"
    pool:
      vmImage: $(vmImage)

    steps:
    - task: Docker@2
      displayName: Build Docker Image
      inputs:
        command: build
        dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)

    - script: dotnet test tests/ProjectTemplate.UnitTests 
      displayName: Run Unit Tests

    - task: DockerCompose@0
      displayName: 'docker-compose down'
      condition: always()
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: $(dockerComposePath)
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'down --remove-orphans'
      
    - task: DockerCompose@0
      displayName: 'docker-compose up'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: $(dockerComposePath)
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up -d --build'

    - script: dotnet test tests/ProjectTemplate.IntegrationTests
      displayName: Run Integration Tests

    - task: DockerCompose@0
      displayName: 'docker-compose down'
      condition: always()
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: $(dockerComposePath)
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'down'

