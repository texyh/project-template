trigger:
- main

variables:
  vmImageName: 'ubuntu-latest'

jobs:
  - job: CalculateBuildVersion
    displayName: Calculate Build Version
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: gitversion/setup@0
      displayName: Install GitVersion
      inputs:
        versionSpec: '5.x'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')

    - script: echo $(GitVersion.SemVer)
      displayName: 'Print Version'
  
    - script: echo '##vso[task.setvariable variable=buildVersion]$(GitVersion.SemVer)'
      displayName: "Set the build Version as SemVer"
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  
    - script: echo '##vso[task.setvariable variable=buildVersion;isOutput=true]$(buildVersion)'
      name: setVersion
      displayName: 'Export the buildVersion for other jobs'


  - job: PackAndPush
    dependsOn: CalculateBuildVersion
    displayName: Pack Project And Push To Artifacts
    pool:
      vmImage: $(vmImageName)
    variables:
      buildVersion: $[ dependencies.CalculateVersion.outputs['setVersion.buildVersion'] ]
      
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'NuGet Pack'
      inputs:
        command: 'pack'
        packagesToPack: 'src/'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'buildVersion'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')

    - task: DotNetCoreCLI@2
      displayName: 'NuGet Push'
      inputs:
        command: 'push'
        feedsToUse: 'select'
        publishVstsFeed: 'Onwuzulike-Emeka'
        allowPackageConflicts: true
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')